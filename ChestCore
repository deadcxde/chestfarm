pcall(function()
    local placeId = game.PlaceId
    if placeId == 2753915549 or placeId == 4442272183 or placeId == 7449423635 then
        BF = true
    end
    if _G.ChestLoaded then
        print("Already loaded!")
        return
    end
    _G.ChestLoaded = 1
    if _G.StopWhenChalice == nil then
        _G.Stop = false
        _G.StopWhenChalice = false
    end
    if _G.StopWhenDarkness == nil then
        _G.Stop = false
        _G.StopWhenDarkness = false
    end
    if BF == true then
        repeat wait() until game:IsLoaded()
        function Notification(text)
            local StarterGui = game:GetService("StarterGui")
            StarterGui:SetCore("SendNotification", {
                Title = "ChestFarm | deadcxde";
                Text = text
            })
        end
        local function RequestEntrance(CFrame)
            -- Script generated by SimpleSpy - credits to exx#9394
            local args = {
                [1] = "requestEntrance",
                [2] = CFrame.Position
            }
            game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        end
        function tableempty(tb)
            for _, _ in pairs(tb) do
                return false
            end
            return true
        end
        
        if _G.StopWhenChalice then
            task.spawn(function()
                while task.wait() do
                    for i,v in game.Players.LocalPlayer.Backpack:GetChildren() do
                        if string.find(v.Name, "halice") then
                            _G.Stop = true
                        end
                    end
                end
            end)
        end
        if _G.StopWhenDarkness then
            task.spawn(function()
                while task.wait() do
                    for i,v in game.Players.LocalPlayer.Backpack:GetChildren() do
                        if string.find(v.Name, "arkness") then
                            _G.Stop = true
                        end
                    end
                end
            end)
        end

        local OSTime = os.time()
        local Time = os.date('!*t', OSTime)
        local beliOnStart = game.Players.LocalPlayer.Data.Beli.Value
        local function send_webhook(sended_from)
            if not _G.WebhookTimer or not _G.WebhookURL then return end
            local nOSTime = os.time()
            local nTime = os.date('!*t', nOSTime)
            local workTime = os.date('!*t', nOSTime - OSTime)
            local plr = game.Players.LocalPlayer
            function spacenumber(n) 
               local s = string.reverse(n)
               return s:gsub("(%d%d%d)", "%1 "):reverse() 
            end
            local beliInc = spacenumber(plr.Data.Beli.Value - beliOnStart)
            local Embed = {
                ["title"] = "<:nhech_mep:1135495034289004545> " .. plr.Name .. " <:nhech_mep:1135495034289004545> ",
                ["description"] = "**Balance changes: ** `$" .. spacenumber(beliOnStart) .. "` -> `$" .. spacenumber(plr.Data.Beli.Value) .. "`\n" .. "**Beli gathered: ** `$" .. beliInc ..  "`" .. "\n**Start Time:** `" .. string.format('%02d:%02d:%02d', Time.hour, Time.min, Time.sec) .. "`\n**Time now:** `" .. string.format('%02d:%02d:%02d', nTime.hour, nTime.min, nTime.sec) .. "`\n**Working time:** `" .. string.format('%02d:%02d:%02d', workTime.hour, workTime.min, workTime.sec) .. "`\n**" .. sended_from .. "**",
                ["type"] = "rich",
                ["color"] = tonumber(0xffff00),
                ["footer"] = {
                    ["text"] = "chest farm bot",
                },
                ["timestamp"] = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
            };
            http.request {
                Url = _G.WebhookURL;
                Method = 'POST';
                Headers = {
                    ['Content-Type'] = 'application/json';
                };
                Body = game:GetService'HttpService':JSONEncode({embeds = {Embed};});
            };
        end
    
        function HopServer(bO)
            if not bO then
                bO = 10
            end
            ticklon = tick()
            repeat
                task.wait()
            until tick() - ticklon >= 1
            local function Hop()
                for r = 1, math.huge do
                    if ChooseRegion == nil or ChooseRegion == "" then
                        ChooseRegion = "Germany"
                    else
                        game:GetService("Players").LocalPlayer.PlayerGui.ServerBrowser.Frame.Filters.SearchRegion.TextBox.Text =
                            ChooseRegion
                    end
                    local bP = game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer(r)
                    for k, v in pairs(bP) do
                        if k ~= game.JobId and v["Count"] < bO then
                           game:GetService("ReplicatedStorage").__ServerBrowser:InvokeServer("teleport", k)
                        end
                    end
                end
                return false
            end
            if not getgenv().Loaded then
                local function bQ(v)
                    if v.Name == "ErrorPrompt" then
                        if v.Visible then
                            if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                HopServer()
                                v.Visible = false
                            end
                        end
                        v:GetPropertyChangedSignal("Visible"):Connect(
                            function()
                                if v.Visible then
                                    if v.TitleFrame.ErrorTitle.Text == "Teleport Failed" then
                                        HopServer()
                                        v.Visible = false
                                    end
                                end
                            end
                        )
                    end
                end
                for k, v in pairs(game.CoreGui.RobloxPromptGui.promptOverlay:GetChildren()) do
                    bQ(v)
                end
                game.CoreGui.RobloxPromptGui.promptOverlay.ChildAdded:Connect(bQ)
                getgenv().Loaded = true
            end
            while not Hop() do
                wait()
            end
        end

        -- OldNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
        --     if (getgenv().ED_AntiKick.CheckCaller and not checkcaller() or true) and stringlower(getnamecallmethod()) == "kick" and ED_AntiKick.Enabled then
        --         if getgenv().ED_AntiKick.SendNotifications then
        --             StarterGui:SetCore("SendNotification", {
        --                 Title = "Exunys Developer",
        --                 Text = "The script has successfully intercepted an attempted kick.",
        --                 Icon = "rbxassetid://6238540373",
        --                 Duration = 2,
        --             })
        --         end
        
        --         return nil
        --     end
        
        --     return OldNamecall(...)
        -- end))

        local function loopHopServer()
            while wait() do wait(2) HopServer() end
        end
        
        _G.WebSended = false
        
        function findChestByCframe(cframe)
            local obj = false
            for i,v in pairs(game.Workspace.Map:GetChildren()) do
                for i2, v2 in pairs(v:GetChildren()) do
                    if v2.Name == 'Detail' then
                        for i3, chest in pairs(v2:GetChildren()) do
                            if string.find(chest.Name, "Chest") and chest.Name ~= 'RengokuChest' then
                                if chest.CFrame == cframe then return v end
                            end
                        end
                    end
                end
            end
            for i,v in pairs(game.Workspace:GetChildren()) do
                if string.find(v.Name, "Chest") then
                    if v.CFrame == cframe then return v end
                end
            end
            return obj
        end

        -- function Bypass(Chest)
            
        --     Chest.CanCollide = false
        --     if game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip") then
        --         game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyClip"):Destroy()
        --     end

        --     -- status, err = pcall(function() Chest.Script.RunContext = "Client" end)
        --     cframe = Chest.CFrame
        --     game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
        --     repeat wait()
        --         game.Players.LocalPlayer.Character:PivotTo(Chest:GetPivot() * CFrame.new(0, 2, 0))
        --         wait(.2)
        --         firesignal(Chest.Touched,game.Players.LocalPlayer.Character.HumanoidRootPart)
        --     until findChestByCframe(cframe) == false
        --     game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
        -- end
    
        local function toTarget(...)
            local RealtargetPos = {...}
            local targetPos = RealtargetPos[1]
            local RealTarget
            if type(targetPos) == "vector" then
                RealTarget = CFrame.new(targetPos)
            elseif type(targetPos) == "userdata" then
                RealTarget = targetPos
            elseif type(targetPos) == "number" then
                RealTarget = CFrame.new(unpack(RealtargetPos))
            end
        
            if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 then if tween then tween:Cancel() end repeat wait() until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health > 0; wait(0.2) end
        
            local tweenfunc = {}
            local Distance = (RealTarget.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
            if Distance > 10000 then
                RequestEntrance(RealTarget)
                local Distance = (RealTarget.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
            end
    
            if Distance < 1000 then
                Speed = 300
            elseif Distance >= 1000 then
                Speed = 380
            end
        
            local tween_s = game:service"TweenService"
            local info = TweenInfo.new((RealTarget.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude/Speed, Enum.EasingStyle.Linear)
            local tweenw, err = pcall(function()
                tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = RealTarget})
                tween:Play()
            end)
        
            function tweenfunc:Stop()
                tween:Cancel()
            end 
        
            function tweenfunc:Wait()
                tween.Completed:Wait()
            end 
        
            return tweenfunc
        end
        -- local function teleportToObject(object)
        --     pcall(function() 
        --         game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position = object.Position
        --         wait(0.2)
        --         game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position = object.Position
        --     end)
            
        -- end
        Notification("Chest Farm auto loaded")
        local function findNearestChest()
            local latestDist = 9999999
            local obj = false
            for i,v in pairs(game.Workspace.Map:GetChildren()) do
                for i2, v2 in pairs(v:GetChildren()) do
                    if v2.Name == 'Detail' then
                        for i3, chest in pairs(v2:GetChildren()) do
                            if string.find(chest.Name, "Chest") and chest.Name ~= 'RengokuChest' then
                                if (chest.CFrame.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude < latestDist then
                                    latestDist = (chest.CFrame.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
                                    obj = chest
                                end
                            end
                        end
                    end
                end
            end
            for i,v in pairs(game.Workspace:GetChildren()) do
                if string.find(v.Name, "Chest") then
                    if (v.CFrame.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude < latestDist then
                        latestDist = (v.CFrame.Position - game:GetService("Players").LocalPlayer.Character:WaitForChild("HumanoidRootPart").Position).Magnitude
                        obj = v
                    end
                end
            end
            return obj
        end

        local function findAllChest()
            obj = {}
            for i,v in pairs(game.Workspace.Map:GetChildren()) do
                for i2, v2 in pairs(v:GetChildren()) do
                    if v2.Name == 'Detail' then
                        for i3, chest in pairs(v2:GetChildren()) do
                            if string.find(chest.Name, "Chest") and chest.Name ~= 'RengokuChest' then
                                table.insert(obj, chest)
                            end
                        end
                    end
                end
            end
            for i,v in pairs(game.Workspace:GetChildren()) do
                if string.find(v.Name, "Chest") then
                    table.insert(obj, v)
                end
            end
            return obj
        end
        
        _G.CounterBeforeHop = 0
        _G.MaxCounter = 5
        _G.WaitTimeWhenCount = 1
        if not _G.IDONTCAREABOUTBAN or _G.IDONTCAREABOUTBAN == false then
            if _G.BypassTP then
                task.spawn(function() 
                    while wait() do
                        if _G.Stop then return end
                        task.wait(6)
                        if _G.Stop then return end
                        game.Players.LocalPlayer.Character.Humanoid.Health = 0
                        task.wait(1)
                        repeat task.wait() until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
                    end
                end)
                task.spawn(function()
                    local chestBefore = nil
                    while true do
                        if _G.Stop == true then return end
                        if _G.StopEnabled == true and _G.StopWhenBeli > 0 and game.Players.LocalPlayer.Data.Beli.Value > _G.StopWhenBeli then return end
                        local hasChar = game.Players.LocalPlayer:FindFirstChild("Character")
                        if not game.Players.LocalPlayer.Character or game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 then
                
                        else
                            if _G.Stop == true then return end
                            if _G.StopEnabled == true and _G.StopWhenBeli > 0 and game.Players.LocalPlayer.Data.Beli.Value > _G.StopWhenBeli then return end
                            local hasCrewTag = game.Players.LocalPlayer.Character:FindFirstChild("CrewBBG",true)
                            if hasCrewTag then hasCrewTag:Destroy() end
                            local hasHumanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                            if hasHumanoid then
                                local Chest = game.Workspace:FindFirstChild("Chest4") or game.Workspace:FindFirstChild("Chest3") or game.Workspace:FindFirstChild("Chest2") or game.Workspace:FindFirstChild("Chest1") or game.Workspace:FindFirstChild("Chest")
                                
                                if Chest then
                                    if chestBefore ~= Chest then task.wait(_G.DelayBetweenChest or 0.1) end
                                    chestBefore = Chest
                                    game.Players.LocalPlayer.Character:PivotTo(Chest:GetPivot())
                                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, Chest.TouchInterest.Parent, 1) 
                                    firesignal(Chest.Touched,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                else
                                    task.wait(_G.DelayTP or 1)
                                    HopServer()
                                    break
                                end
                            end 
                        end
                        task.wait()
                    end
                end)
            else
                spawn(function()
                    while wait() do
                        if _G.StopEnabled then
                            if game.Players.LocalPlayer.Data.Beli.Value >= _G.StopWhenBeli then return end    
                        end
                        wait(0.5)
                        if _G.ChestFarmEnabled then
                            cframe = findNearestChest()
                            if cframe then
                                toTarget(cframe.CFrame)
                                game:service('VirtualInputManager'):SendKeyEvent(true, "Q", false, game)
                                game:service('VirtualInputManager'):SendKeyEvent(false, "Q", false, game)
                                wait(.1)
                            else
                                if _G.HopWhenNoChest then
                                    if _G.WebhookURL then 
                                        if not _G.WebSended then _G.WebSended = true end
                                    end
                                    HopServer()
                                    return
                                end
                            end
                        end
                    end
                end)
                spawn(function()
                    while wait() do
                        wait(2)
                        if _G.ChestFarmEnabled then
                            game:GetService"Players".LocalPlayer.Character:FindFirstChildOfClass'Humanoid':ChangeState("Jumping")
                        end
                    end
                end)
            
            end
        else
            task.spawn(function() 
                while wait() do
                    if _G.Stop then return end
                    task.wait(6)
                    if _G.Stop then return end
                    game.Players.LocalPlayer.Character.Humanoid.Health = 0
                    task.wait(1)
                    repeat task.wait() until game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health > 0
                end
            end)
            task.spawn(function()
                local chestBefore = nil
                while true do
                    if _G.Stop == true then return end
                    if _G.StopEnabled == true and _G.StopWhenBeli > 0 and game.Players.LocalPlayer.Data.Beli.Value > _G.StopWhenBeli then return end
                    local hasChar = game.Players.LocalPlayer:FindFirstChild("Character")
                    if not game.Players.LocalPlayer.Character or game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health == 0 then
            
                    else
                        if _G.Stop == true then return end
                        if _G.StopEnabled == true and _G.StopWhenBeli > 0 and game.Players.LocalPlayer.Data.Beli.Value > _G.StopWhenBeli then return end
                        local hasCrewTag = game.Players.LocalPlayer.Character:FindFirstChild("CrewBBG",true)
                        if hasCrewTag then hasCrewTag:Destroy() end
                        local hasHumanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                        if hasHumanoid then
                            chests = {}
                            for i, chest in pairs(game.Workspace:GetChildren()) do
                                if chest.Name == "Chest3" or chest.Name == "Chest2" or chest.Name == "Chest1" or chest.Name == "Chest4" then
                                    if _G.Stop == true then return end
                                    chest.Script.RunContext = "Client"
                                    game.Players.LocalPlayer.Character:PivotTo(chest:GetPivot())
                                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, Chest.TouchInterest.Parent, 1) 
                                    task.wait()
                                    game.Players.LocalPlayer.Character:PivotTo(Chest:GetPivot())
                                    firesignal(chest.Touched,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                    task.wait()
                                    game.Players.LocalPlayer.Character:PivotTo(Chest:GetPivot())
                                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, chest.TouchInterest.Parent, 0) 
                                    task.wait()
                                    game.Players.LocalPlayer.Character:PivotTo(Chest:GetPivot())
                                    firesignal(chest.Touched,game.Players.LocalPlayer.Character.HumanoidRootPart)
                                    task.wait()
                                end
                            end
                            if not game.Workspace:FindFirstChild("Chest1") and not game.Workspace:FindFirstChild("Chest2") and not game.Workspace:FindFirstChild("Chest3") and not game.Workspace:FindFirstChild("Chest4") then
                                HopServer()
                                break
                            end
                        end 
                    end
                    task.wait()
                end
            end)
        end
        spawn(function()
            wait(1800)
            if _G.ChestFarmEnabled then
                if _G.BypassAntiCheat then
                    HopServer()
                end
            end
        end)
        
        spawn(function()
            while wait() do 
                if _G.ChestFarmEnabled then
                    if _G.BypassTP and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false end
                    if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
                        game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
                        game.Players.LocalPlayer.Character.HumanoidRootPart.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position * Vector3.new(0, 20, 0)
                    end
                    if not _G.BypassTP then
                        if syn then
                            setfflag("HumanoidParallelRemoveNoPhysics", "False")
                            setfflag("HumanoidParallelRemoveNoPhysicsNoSimulate2", "False")
                            game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
                            if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
                                game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
                            end
                        else
                            if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                                if not game:GetService("Players").LocalPlayer.Character.HumanoidRootPart:FindFirstChild("BodyVelocity1") then
                                    if game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit == true then
                                        game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Sit = false
                                    end
                                    local BodyVelocity = Instance.new("BodyVelocity")
                                    BodyVelocity.Name = "BodyVelocity1"
                                    BodyVelocity.Parent =  game:GetService("Players").LocalPlayer.Character.HumanoidRootPart
                                    BodyVelocity.MaxForce = Vector3.new(10000, 10000, 10000)
                                    BodyVelocity.Velocity = Vector3.new(0, 0, 0)
                                end
                            end
                            for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                                if v:IsA("BasePart") then
                                    v.CanCollide = false    
                                end
                            end
                        end
                    end
                end
            end
        end)
    
        spawn(function()
            while wait() do
                wait(20)
                local VirtualUser=game:service'VirtualUser'
                game:service('Players').LocalPlayer.Idled:connect(function()
                VirtualUser:CaptureController()
                VirtualUser:ClickButton2(Vector2.new())
                end)
            end
        end)
    
        spawn(function()
            repeat wait() until _G.WebSended == true
            send_webhook("Hopping Server | Disconnected")
            return
        end)
        
        local veryImportantWaitTime = 0.5
        task.spawn(function()
            while task.wait(veryImportantWaitTime) do
                pcall(function()
                    for i,v in pairs(game.CoreGui:GetDescendants()) do
                        pcall(function()
                            if string.find(v.Name,"ErrorMessage") then
                                if string.find(v.Text,"Security kick") then
                                    veryImportantWaitTime = 1e9
                                    HopServer()
                                end
                            end
                        end)
                    end
                end)
            end
        end)

        spawn(function()
            while wait() do
                wait(5)
                game:GetService("GuiService").ErrorMessageChanged:Connect(function()
                    if _G.WebhookURL then 
                        if not _G.WebSended then _G.WebSended = true end
                    end
                    loopHopServer()
                    return
                end)
            end
        end)
    
        if _G.ChestFarmEnabled then
            status, err = pcall(function()
                repeat wait()
                    if game:GetService("Players").LocalPlayer.PlayerGui:WaitForChild("Main").ChooseTeam.Visible == true then
                        if _G.Team == "Pirate" then
                            for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton.Activated)) do                                                                                                
                                v.Function()
                            end
                        elseif _G.Team == "Marine" then
                            for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Marines.Frame.TextButton.Activated)) do                                                                                                
                                v.Function()
                            end
                        else
                            for i, v in pairs(getconnections(game:GetService("Players").LocalPlayer.PlayerGui.Main.ChooseTeam.Container.Pirates.Frame.TextButton.Activated)) do                                                                                                
                                v.Function()
                            end
                        end
                    end
                until game.Players.LocalPlayer.Team ~= nil and game:IsLoaded() 
            end)
        end
    else
        print("Game not supported")
    end
    
end)
